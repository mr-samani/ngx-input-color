(self.webpackChunkngx_input_color=self.webpackChunkngx_input_color||[]).push([[707,788],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{R:()=>useMDXComponents,x:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const emptyComponents={},MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext(emptyComponents);function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function(){return"function"==typeof components?components(contextComponents):{...contextComponents,...components}},[contextComponents,components])}function MDXProvider(properties){let allComponents;return allComponents=properties.disableParentContext?"function"==typeof properties.components?properties.components(emptyComponents):properties.components||emptyComponents:useMDXComponents(properties.components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},properties.children)}},"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./projects/storybook/Configure.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{RightArrow:()=>RightArrow,default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs");const README_imported_namespaceObject='# ngx-input-color & ngx-input-gradient\r\n\r\n[![npm version](https://img.shields.io/npm/v/ngx-input-color.svg)](https://www.npmjs.com/package/ngx-input-color)\r\n[![MIT License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\r\n\r\n**ngx-input-color** and **ngx-input-gradient** are powerful, customizable Angular components for color and gradient picking. They support multiple color formats, real-time preview, inline and input modes, and seamless integration with Angular forms.\r\n\r\n## üöÄ Live Demo\r\n\r\n[View Demo](https://mr-samani.github.io/ngx-input-color/)\r\n\r\n![Screenshot](https://mr-samani.github.io/ngx-input-color/screenshot.png)\r\n\r\n---\r\n\r\n## ‚ú® Features\r\n\r\n- **Multiple Color Formats:** HEX, RGBA, HSLA, HSVA, CMYK (for color), and full CSS gradients (for gradient)\r\n- **Interactive UI:** Drag-and-drop sliders for hue, saturation, lightness, alpha, and more\r\n- **Angular Forms Integration:** Works with `ngModel` and reactive forms\r\n- **EyeDropper API Support:** Pick colors from anywhere on your screen (if supported)\r\n- **Live Preview:** Instantly see the selected color or gradient\r\n- **Highly Customizable:** Change button titles, show/hide close/confirm buttons, set input background color, and more\r\n- **Inline & Input Modes:** Use as a popup input or as an always-visible inline component\r\n- **Unit Tested:** Includes comprehensive unit tests\r\n\r\n---\r\n\r\n## üì¶ Installation\r\n\r\n```bash\r\nnpm install ngx-input-color\r\n# or\r\nyarn add ngx-input-color\r\n# or\r\npnpm add ngx-input-color\r\n```\r\n\r\n---\r\n\r\n## üõ†Ô∏è Usage\r\n\r\n### 1. Import the Module\r\n\r\n```typescript\r\nimport { NgxInputColorModule } from \'ngx-input-color\';\r\n```\r\n\r\n### 2. Input Mode (Popup)\r\n\r\n#### Color Picker Input\r\n\r\n```html\r\n<input ngxInputColor [(ngModel)]="color" [closeTitle]="\'Cancel\'" [confirmTitle]="\'Select\'" />\r\n<span>Selected: {{ color }}</span>\r\n```\r\n\r\n#### Gradient Picker Input\r\n\r\n```html\r\n<input ngxInputGradient [(ngModel)]="gradient" [closeTitle]="\'Cancel\'" [confirmTitle]="\'Select\'" />\r\n<span>Selected: {{ gradient }}</span>\r\n```\r\n\r\n### 3. Inline Mode (Always Visible)\r\n\r\n#### Inline Color Picker\r\n\r\n```html\r\n<ngx-input-color [(ngModel)]="inlineColor" [showCloseButton]="true" [showConfirmButton]="true" [simpleMode]="false"></ngx-input-color>\r\n<span>Selected: {{ inlineColor }}</span>\r\n```\r\n\r\n#### Inline Gradient Picker\r\n\r\n```html\r\n<ngx-input-gradient [(ngModel)]="inlineGradient" [showCloseButton]="true" [confirmTitle]="\'Done\'"></ngx-input-gradient>\r\n<span>Selected: {{ inlineGradient }}</span>\r\n```\r\n\r\n---\r\n\r\n## üìö API Reference\r\n\r\n### NgxInputColor (Input & Inline)\r\n\r\n| Name                          | Type                   | Default   | Description                                    |\r\n| ----------------------------- | ---------------------- | --------- | ---------------------------------------------- |\r\n| `closeTitle`                  | `string`               | \'Close\'   | Text for the close button                      |\r\n| `confirmTitle`                | `string`               | \'Ok\'      | Text for the confirm button                    |\r\n| `showCloseButton`             | `boolean`              | `false`   | Show/hide the close button                     |\r\n| `showConfirmButton`           | `boolean`              | `false`   | Show/hide the confirm button                   |\r\n| `setInputBackgroundColor`     | `boolean`              | `true`    | Set input background to selected color         |\r\n| `simpleMode`                  | `boolean`              | `false`   | Compact UI for inline use                      |\r\n| `defaultInspector`            | `ColorInspector` enum  | Picker    | Default inspector (Picker, RGB, HSL, CMYK)     |\r\n| `[(ngModel)]` / `formControl` | `string`               |           | Two-way binding for the selected color         |\r\n| `change` (Output)             | `EventEmitter<string>` |           | Emits the color value on change                |\r\n| `confirm` (Output)            | `EventEmitter<string>` |           | Emits the color value when confirmed           |\r\n| `cancel` (Output)             | `EventEmitter<void>`   |           | Emits when the color picker is closed/canceled |\r\n\r\n#### Supported Color Formats\r\n\r\n- HEX (`#RRGGBB` or `#RRGGBBAA`)\r\n- RGBA (`rgba(255,255,255,1)`)\r\n- HSLA (`hsla(360,100%,100%,1)`)\r\n- HSVA\r\n- CMYK\r\n\r\n---\r\n\r\n### NgxInputGradient (Input & Inline)\r\n\r\n| Name                          | Type                   | Default   | Description                                    |\r\n| ----------------------------- | ---------------------- | --------- | ---------------------------------------------- |\r\n| `closeTitle`                  | `string`               | \'Close\'   | Text for the close button                      |\r\n| `confirmTitle`                | `string`               | \'Ok\'      | Text for the confirm button                    |\r\n| `showCloseButton`             | `boolean`              | `true`    | Show/hide the close button                     |\r\n| `[(ngModel)]` / `formControl` | `string`               |           | Two-way binding for the selected gradient      |\r\n| `change` (Output)             | `EventEmitter<string>` |           | Emits the gradient value on change             |\r\n| `confirm` (Output)            | `EventEmitter<string>` |           | Emits the gradient value when confirmed        |\r\n| `cancel` (Output)             | `EventEmitter<void>`   |           | Emits when the gradient picker is closed       |\r\n\r\n#### Supported Gradient Formats\r\n\r\n- CSS Linear Gradients (e.g. `linear-gradient(90deg, #ff0000 0%, #00ff00 100%)`)\r\n- CSS Radial Gradients (e.g. `radial-gradient(circle, #ff0000 0%, #00ff00 100%)`)\r\n\r\n---\r\n\r\n## ‚öôÔ∏è Customization\r\n\r\n- All button titles, visibility, and UI modes are fully customizable via component inputs.\r\n- Works seamlessly with both Template-driven and Reactive Forms.\r\n\r\n---\r\n\r\n## üß™ Testing & Development\r\n\r\n- This library includes comprehensive unit tests. Run `ng test` to verify functionality.\r\n- Contributions are welcome! Please open an issue or submit a pull request.\r\n\r\n---\r\n\r\n## ‚ùì FAQ\r\n\r\n- **Can I programmatically set the color/gradient?**  \r\n  Yes, simply update the variable bound to `ngModel` or your form control.\r\n\r\n- **Is EyeDropper API supported?**  \r\n  Yes, in modern browsers that support the EyeDropper API.\r\n\r\n---\r\n\r\n## üìÑ License\r\n\r\nMIT\r\n\r\n---\r\n\r\n## üîó Useful Links\r\n\r\n- [Live Demo](https://mr-samani.github.io/ngx-input-color/)\r\n- [Storybook Documentation](https://mr-samani.github.io/ngx-input-color/storybook/)\r\n- [GitHub Repository](https://github.com/mr-samani/ngx-input-color)\r\n\r\n---\r\n\r\n> Developed by [Mohammadreza Samani](https://github.com/mr-samani)',RightArrow=(__webpack_require__.p,()=>(0,jsx_runtime.jsx)("svg",{viewBox:"0 0 14 14",width:"8px",height:"14px",style:{marginLeft:"4px",display:"inline-block",shapeRendering:"inherit",verticalAlign:"middle",fill:"currentColor","path fill":"currentColor"},children:(0,jsx_runtime.jsx)("path",{d:"m11.1 7.35-5.5 5.5a.5.5 0 0 1-.7-.7L10.04 7 4.9 1.85a.5.5 0 1 1 .7-.7l5.5 5.5c.2.2.2.5 0 .7Z"})}));function _createMdxContent(props){const _components={h1:"h1",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(blocks.W8,{title:"üìò Documents"}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"-welcome",children:"üëã Welcome"}),"\n",(0,jsx_runtime.jsx)(blocks.oz,{children:README_imported_namespaceObject})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}}}]);