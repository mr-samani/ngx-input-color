(self.webpackChunkngx_input_color=self.webpackChunkngx_input_color||[]).push([[654],{"./projects/ngx-input-color/src/lib/ngx-input-gradient/ngx-input-gradient.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'.ngx-input-color-picker {\n  width: 330px;\n  max-width: 100%;\n  border: 1px #bfbfbf solid;\n  border-radius: 15px;\n  background-color: white;\n  overflow: hidden;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.31);\n  direction: ltr;\n}\n.ngx-input-color-picker .inner {\n  padding: 0 12px 12px;\n}\n.ngx-input-color-picker * {\n  box-sizing: border-box;\n}\n\n.ngx-color-preview {\n  min-height: 120px;\n  padding: 10px 36px;\n  line-height: 2.2;\n  font-size: 14px;\n  font-family: arial, tahoma;\n  font-weight: 700;\n  position: relative;\n  color: #353535;\n}\n.ngx-color-preview:after {\n  content: " ";\n  position: absolute;\n  background-color: white;\n  bottom: 0;\n  width: 100%;\n  left: 0;\n  right: 0;\n  height: 30px;\n  border-radius: 30px 30px 0 0;\n}\n.ngx-color-preview::before {\n  content: " ";\n  background-image: linear-gradient(45deg, #ccc 25%, transparent 25%), linear-gradient(-45deg, #ccc 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #ccc 75%), linear-gradient(-45deg, transparent 75%, #ccc 75%);\n  background-size: 16px 16px;\n  background-position: 0 0, 0 8px, 8px -8px, -8px 0px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n}\n\n/*------ button groups ---------*/\n.button-groups {\n  display: flex;\n  border-radius: 4px;\n  overflow: hidden;\n  border: 1px #d3d3d3 solid;\n}\n.button-groups button {\n  cursor: pointer;\n  background: #f9f9f9;\n  outline: none;\n  border: none;\n  transition: all 300ms;\n  border-left: 1px #d3d3d3 solid;\n  padding: 10px 12px;\n  flex: auto;\n}\n.button-groups button:hover {\n  background: #8db6e4;\n}\n.button-groups button:first-child {\n  border-left-width: 0;\n}\n\n.actions {\n  display: flex;\n  gap: 10px;\n  padding: 15px;\n  justify-content: space-between;\n}\n.actions .action-buttons {\n  display: flex;\n  gap: 10px;\n}\n.actions button {\n  cursor: pointer;\n  background: #f9f9f9;\n  outline: none;\n  transition: all 300ms;\n  border: 1px #d3d3d3 solid;\n  padding: 10px 12px;\n  min-width: 90px;\n  border-radius: 6px;\n}\n.actions button:hover {\n  background: #8db6e4;\n}\n\n/*------ button groups ---------*/\n.ngx-row {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n}\n.ngx-row .ngx-col-6 {\n  width: 48%;\n}\n.ngx-row .input-color {\n  position: relative;\n}\n.ngx-row .input-color input {\n  padding-right: 26px;\n}\n.ngx-row .input-color .color {\n  position: absolute;\n  top: 4px;\n  right: 5px;\n  cursor: pointer;\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  transition: all 300ms;\n}\n.ngx-row .input-color .color:hover {\n  border-color: #8db6e4;\n}\n.ngx-row select,\n.ngx-row input {\n  outline: none;\n  border: 1px solid #ececec;\n  border-radius: 4px;\n  padding: 8px 10px;\n  background: none;\n  width: 100%;\n}\n.ngx-row select:focus,\n.ngx-row input:focus {\n  cursor: pointer;\n  background: hsl(216, 100%, 95%);\n  color: hsl(216, 100%, 50%);\n}\n.ngx-row select option,\n.ngx-row input option {\n  padding: 10px 20px;\n  background-color: #fff;\n  transition: all 300ms;\n}\n.ngx-row select option:hover,\n.ngx-row input option:hover {\n  background: #f0f0f0;\n}\n\n.text-end {\n  text-align: end;\n}\n\n.remove-btn {\n  background: none;\n  border: none;\n  outline: none;\n  color: #0077ff;\n  transition: color 300ms;\n}\n.remove-btn:hover {\n  color: #0462cc;\n}\n\n.default-list {\n  display: flex;\n  gap: 6px;\n  flex-wrap: wrap;\n  margin: 16px 0;\n}\n.default-list span {\n  width: 38px;\n  height: 28px;\n  border-radius: 4px;\n  cursor: pointer;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ngx-input-color/src/range-slider/range-slider.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,'.slider-container {\n  max-width: 100%;\n  padding: 1px 0;\n}\n.slider-container .slider {\n  position: relative;\n  box-shadow: inset hsla(250, 3%, 0%, 0.075) 0 0 0 1px;\n  border-radius: 10px;\n  height: 12px;\n  width: 100%;\n  background: var(--ngx-slider-bg, rgb(140, 51, 250));\n  margin: 10px 0;\n}\n.slider-container .slider.bg-transparent {\n  background: transparent;\n}\n.slider-container .slider.bg-transparent::before, .slider-container .slider.bg-transparent::after {\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  right: 1px;\n  bottom: 1px;\n  border-radius: 9px;\n}\n.slider-container .slider.bg-transparent::before {\n  content: " ";\n  background-image: linear-gradient(45deg, #ccc 25%, transparent 25%), linear-gradient(-45deg, #ccc 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #ccc 75%), linear-gradient(-45deg, transparent 75%, #ccc 75%);\n  background-size: 16px 16px;\n  background-position: 0 0, 0 8px, 8px -8px, -8px 0px;\n}\n.slider-container .slider.bg-transparent::after {\n  content: " ";\n  background: var(--ngx-slider-bg);\n}\n.slider-container .slider.add-range-cursor {\n  cursor: copy;\n}\n.slider-container .thumb {\n  box-shadow: hsla(250, 3%, 0%, 0.15) 0 0 0 1px, rgba(0, 0, 0, 0.05) 0 10px 10px -5px, inset #fff 0 0 0 6px;\n  background: var(--ngx-slider-bg, rgb(140, 51, 250));\n  height: var(--ngx-thumb-size, 30px);\n  width: var(--ngx-thumb-size, 30px);\n  display: block;\n  border-radius: 100%;\n  top: calc(6px - var(--ngx-thumb-size, 30px) / 2);\n  position: absolute;\n  cursor: grab;\n  z-index: 100;\n}\n.slider-container .thumb.is-active {\n  outline: 1px rgb(89, 0, 255) solid;\n}',""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/storybook/src/ngx-input-gradient/ngx-input-gradient.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ngx_input_gradient_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),ngx_input_color_module=__webpack_require__("./projects/ngx-input-color/src/ngx-input-color.module.ts"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var ngx_input_gradient_componentngResource=__webpack_require__("./projects/ngx-input-color/src/lib/ngx-input-gradient/ngx-input-gradient.component.scss?ngResource"),ngx_input_gradient_componentngResource_default=__webpack_require__.n(ngx_input_gradient_componentngResource),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");var range_slider_componentngResource=__webpack_require__("./projects/ngx-input-color/src/range-slider/range-slider.component.scss?ngResource"),range_slider_componentngResource_default=__webpack_require__.n(range_slider_componentngResource),get_offset_position=__webpack_require__("./projects/ngx-input-color/src/utils/get-offset-position.ts");let RangeSliderComponent=class RangeSliderComponent{constructor(changeDetectorRef){this.changeDetectorRef=changeDetectorRef,this.step=1,this.min=0,this.max=100,this.isBgTransparent=!1,this.addNewRangeOnClick=!1,this.change=new core.EventEmitter,this.selectedIndexChange=new core.EventEmitter,this.isDragging=!1,this.values=[],this.isDisabled=!1,this._onChange=value=>{},this._onTouched=()=>{},this._validatorOnChange=()=>{}}ngOnInit(){}generateId(){let id="ngx-thumb-"+Math.random().toString(36).substring(2,9);return this.values.findIndex(x=>x.id==id)>=0?this.generateId():id}writeValue(items){this.values=[],items&&Array.isArray(items)||(items=[]),0===items.length&&items.push({id:this.generateId(),value:this.min});for(let val of items){if("number"!=typeof val.value||isNaN(val.value))throw new Error("RangeSliderComponent: value must be an array of numbers");let newVal=+val.value;newVal<+this.min?newVal=+this.min:newVal>+this.max&&(newVal=+this.max),this.values.push({...val,id:val.id??this.generateId(),value:newVal})}this.updateAllThumbPositions()}validate(control){return null}registerOnValidatorChange(fn){this._validatorOnChange=fn}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(disabled){this.isDisabled=disabled}updateRects(){this.sliderRect=this.slider.nativeElement.getBoundingClientRect(),this.thumb&&(this.thumbRect=this.thumb.nativeElement.getBoundingClientRect())}onDrag(ev){this.isDragging&&this.updateThumbPosition(ev)}onResize(){this.writeValue(this.values)}dragStart(ev,index){ev.stopPropagation(),ev.preventDefault(),this.isDragging=!0,this.selectedIndex=index,this.updateRects(),this.updateThumbPosition(ev),this.selectedIndexChange.emit(this.selectedIndex)}addnewRangeOnSliderClick(event){if(!this.addNewRangeOnClick)return;const position=(0,get_offset_position.$)(event,this.slider.nativeElement),newValue=this.min+position.x/this.sliderRect.width*(this.max-this.min),indexByOrderValue=this.values.findIndex(item=>item.value>newValue),insertIndex=indexByOrderValue>=0?indexByOrderValue:this.values.length;this.values.splice(insertIndex,0,{id:this.generateId(),value:newValue}),this.dragStart(event,insertIndex)}updateThumbPosition(ev){if(!this.isDragging||null==this.selectedIndex)return;this.sliderRect&&this.thumbRect||this.updateRects();let position=(0,get_offset_position.$)(ev,this.slider.nativeElement),thumbRec=this.thumbRect;position.x-=thumbRec.width/2;let sliderRec=this.sliderRect;const thumb=this.values[this.selectedIndex];position.x<0?thumb.x=0:position.x>sliderRec.width-thumbRec.width?thumb.x=sliderRec.width-thumbRec.width:thumb.x=position.x,this.setValueByPosition(thumb,thumbRec,sliderRec)}updateAllThumbPositions(){setTimeout(()=>{this.updateRects();const sliderRec=this.sliderRect,thumbRec=this.thumbRect;for(let item of this.values)item.x=(item.value-this.min)*(sliderRec.width-thumbRec.width)/(this.max-this.min);this.changeDetectorRef.detectChanges()})}setValueByPosition(thumb,thumbRec,sliderRec){const percentage=(thumb.x??0)/(sliderRec.width-thumbRec.width);let newValue=this.min+percentage*(this.max-this.min);const stepDecimalPlaces=(this.step.toString().split(".")[1]||"").length;newValue=parseFloat((Math.round(newValue/this.step)*this.step).toFixed(stepDecimalPlaces));let value=Math.min(Math.max(newValue,this.min),this.max);thumb.value!==value&&(thumb.value=value,this.valueChanged())}onDragEnd(ev){this.isDragging=!1}valueChanged(){const v=this.values;this._onChange(v),this.change.emit(v)}static{this.ctorParameters=()=>[{type:core.ChangeDetectorRef}]}static{this.propDecorators={step:[{type:core.Input}],min:[{type:core.Input}],max:[{type:core.Input}],background:[{type:core.Input}],isBgTransparent:[{type:core.Input}],addNewRangeOnClick:[{type:core.Input}],change:[{type:core.Output}],selectedIndex:[{type:core.Input}],selectedIndexChange:[{type:core.Output}],slider:[{type:core.ViewChild,args:["slider",{static:!0}]}],thumb:[{type:core.ViewChild,args:["thumb",{static:!1}]}],onDrag:[{type:core.HostListener,args:["document:mousemove",["$event"]]},{type:core.HostListener,args:["document:touchmove",["$event"]]}],onResize:[{type:core.HostListener,args:["window:resize",["$event"]]}],onDragEnd:[{type:core.HostListener,args:["document:mouseup",["$event"]]},{type:core.HostListener,args:["document:touchend",["$event"]]}]}}};function buildGradientFromStops(stops,type="linear",rotation=0){if(!stops||0===stops.length)return"";const sorted=[...stops].sort((a,b)=>a.value-b.value),parts=[];for(const stop of sorted){const value=Math.max(0,Math.min(stop.value,100));parts.push(`${stop.color} ${value}%`)}let f="";return f="linear"===type?`${rotation}deg, `:"circle, ",`${type}-gradient(${f}${parts.join(", ")})`}function generateRandomColor(){let color="#";for(let i=0;i<6;i++)color+="0123456789ABCDEF"[Math.floor(16*Math.random())];return color}RangeSliderComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"range-slider",standalone:!0,imports:[common.MD],template:'<div class="slider-container">\r\n  <ng-content></ng-content>\r\n  <div\r\n    #slider\r\n    class="slider"\r\n    [class.add-range-cursor]="addNewRangeOnClick"\r\n    [ngStyle]="{ \'--ngx-slider-bg\': background }"\r\n    [class.bg-transparent]="isBgTransparent"\r\n    (mousedown)="addnewRangeOnSliderClick($event)"\r\n    (touchstart)="addnewRangeOnSliderClick($event)">\r\n    <div\r\n      class="thumb"\r\n      [class.is-active]="selectedIndex == i"\r\n      #thumb\r\n      *ngFor="let item of values; let i = index"\r\n      [style.left.px]="item.x"\r\n      [style.background]="item.color"\r\n      [title]="item.value"\r\n      (mousedown)="dragStart($event, i)"\r\n      (touchstart)="dragStart($event, i)"></div>\r\n  </div>\r\n</div>\r\n\r\n\x3c!-- {{ selectedIndex }}\r\n<pre dir="ltr" style="text-align: left">{{ values | json }}</pre> --\x3e\r\n\r\n',changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)(()=>RangeSliderComponent),multi:!0},{provide:fesm2022_forms.cz,useExisting:(0,core.forwardRef)(()=>RangeSliderComponent),multi:!0}],styles:[range_slider_componentngResource_default()]})],RangeSliderComponent);const DefaultGradients=[[{id:"1",value:0,color:"#ff7e5f"},{id:"2",value:100,color:"#feb47b"}],[{id:"1",value:0,color:"#00c6ff"},{id:"2",value:100,color:"#0072ff"}],[{id:"1",value:0,color:"#a18cd1"},{id:"2",value:100,color:"#fbc2eb"}],[{id:"1",value:0,color:"#2193b0"},{id:"2",value:100,color:"#6dd5ed"}],[{id:"1",value:0,color:"#ed4264"},{id:"2",value:100,color:"#ffedbc"}],[{id:"1",value:0,color:"#a18cd1"},{id:"2",value:100,color:"#fbc2eb"}],[{id:"1",value:0,color:"#1a2980"},{id:"2",value:100,color:"#26d0ce"}],[{id:"1",value:0,color:"#5a3f37"},{id:"2",value:100,color:"#2c7744"}],[{id:"1",value:0,color:"#ff4e50"},{id:"2",value:100,color:"#f9d423"}],[{id:"1",value:0,color:"#43cea2"},{id:"2",value:100,color:"#185a9d"}],[{id:"1",value:0,color:"#3fada8"},{id:"2",value:100,color:"#808080"}],[{id:"1",value:0,color:"#ff512f"},{id:"2",value:100,color:"#dd2476"}],[{id:"1",value:0,color:"#ff0000"},{id:"2",value:20,color:"#ff9900"},{id:"3",value:40,color:"#ffff00"},{id:"4",value:60,color:"#00ff00"},{id:"5",value:80,color:"#0000ff"},{id:"6",value:100,color:"#8b00ff"}],[{id:"1",value:0,color:"#f953c6"},{id:"2",value:100,color:"#b91d73"}],[{id:"1",value:0,color:"#fdc830"},{id:"2",value:100,color:"#f37335"}],[{id:"1",value:0,color:"#e52d27"},{id:"2",value:100,color:"#b31217"}],[{id:"1",value:0,color:"#e6dada"},{id:"2",value:100,color:"#274046"}],[{id:"1",value:0,color:"#cc2b5e"},{id:"2",value:100,color:"#753a88"}],[{id:"1",value:0,color:"#76b852"},{id:"2",value:100,color:"#8dc26f"}],[{id:"1",value:0,color:"#bdc3c7"},{id:"2",value:100,color:"#2c3e50"}]];let NgxInputGradientComponent=class NgxInputGradientComponent{constructor(cd){this.cd=cd,this.closeTitle="Close",this.confirmTitle="Ok",this.showCloseButton=!0,this.change=new core.EventEmitter,this.confirm=new core.EventEmitter,this.cancel=new core.EventEmitter,this.defaultGradients=[],this.resultGradient="",this.baseBg="",this.rangeValues=[],this.type="linear",this.rotation=90,this.rotationList=[0,45,90,135,180,225,270,315,360],this.selectedIndex=0,this.isDisabled=!1,this._onChange=value=>{},this._onTouched=()=>{},this._onValidateChange=()=>{}}ngOnInit(){this.setDefaultGradients()}ngOnDestroy(){}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(disabled){this.isDisabled=disabled}registerOnValidatorChange(fn){this._onValidateChange=fn}validate(control){if(!this.resultGradient)return{required:!0};const parsed=this.parseGradient(this.resultGradient);return parsed.valid?parsed.stops.length<2?{stops:"at least 2 color stops required"}:null:{invalid:!0}}isValidGradient(value){return/^(\s*)(linear|radial)-gradient\s*\(/i.test(value)}parseGradient(value){let type="linear",rotation=90,stops=[],valid=!1,match=value.match(/^(\s*)(linear|radial)-gradient\s*\((.*)\)$/i);if(!match)return{type,rotation,stops,valid};type=match[2];let content=match[3],parts=[],buf="",depth=0;for(let c of content)"("===c&&depth++,")"===c&&depth--,","===c&&0===depth?(parts.push(buf.trim()),buf=""):buf+=c;buf&&parts.push(buf.trim());let first=parts[0],colorStopStart=0;if("linear"===type){let angleMatch=first.match(/^(\d+)(deg)?$/i);angleMatch?(rotation=parseInt(angleMatch[1],10),colorStopStart=1):/to /.test(first)&&(colorStopStart=1)}else"radial"===type&&(/^(#|rgb|hsl|[a-z])/i.test(first)||(colorStopStart=1));const colorStopRegex=/((#([0-9a-fA-F]{3,8}))|(rgba?\([^\)]+\))|(hsla?\([^\)]+\))|([a-zA-Z]+))(\s+([\d.]+%?|[\d.]+px|[\d.]+em))?/;for(let i=colorStopStart;i<parts.length;i++){let m=parts[i].match(colorStopRegex);if(m){let color=m[1],posStr=m[8],value=0;value=posStr?(posStr.endsWith("%"),parseFloat(posStr)):i===colorStopStart?0:100,stops.push({color,value,id:this.generateId()})}}return valid=stops.length>=2,{type,rotation,stops,valid}}writeValue(value){if(value&&this.isValidGradient(value)){const parsed=this.parseGradient(value);parsed.valid?(this.resultGradient=value,this.type=parsed.type,this.rotation=parsed.rotation,this.rangeValues=parsed.stops):(this.resultGradient="",this.rangeValues=[{color:generateRandomColor(),value:0,id:this.generateId()},{color:generateRandomColor(),value:100,id:this.generateId()}],this.type="linear",this.rotation=90)}else this.resultGradient="",this.rangeValues=[{color:generateRandomColor(),value:0,id:this.generateId()},{color:generateRandomColor(),value:100,id:this.generateId()}],this.type="linear",this.rotation=90;this.generateGradient()}generateId(){let id="ngx-thumb-"+Math.random().toString(36).substring(2,9);return this.rangeValues.findIndex(x=>x.id==id)>=0?this.generateId():id}close(){this.cancel.emit()}ok(){this.emitChange()}stopPropagation(ev){ev.stopPropagation()}remove(){this.rangeValues.length>2&&(this.rangeValues.splice(this.selectedIndex,1),this.selectedIndex=0,this.generateGradient())}generateGradient(ev){ev&&this.rangeValues[this.selectedIndex]&&(this.rangeValues[this.selectedIndex].color=ev);for(let item of this.rangeValues)item.color??=generateRandomColor();this.baseBg=buildGradientFromStops(this.rangeValues,"linear",90),this.resultGradient=buildGradientFromStops(this.rangeValues,this.type,this.rotation)}updateRangeSlider(){this.rangeSlider&&this.rangeSlider.writeValue(this.rangeValues)}emitChange(){this._onChange(this.resultGradient),this.change.emit(this.resultGradient),this.confirm.emit(this.resultGradient)}setDefaultGradients(){this.defaultGradients=[];for(let item of DefaultGradients)this.defaultGradients.push(buildGradientFromStops(item,"linear",90))}onSelectDefault(item,i){this.writeValue(item)}static{this.ctorParameters=()=>[{type:core.ChangeDetectorRef}]}static{this.propDecorators={closeTitle:[{type:core.Input}],confirmTitle:[{type:core.Input}],showCloseButton:[{type:core.Input}],change:[{type:core.Output}],confirm:[{type:core.Output}],cancel:[{type:core.Output}],rangeSlider:[{type:core.ViewChild,args:["rangeSlider",{static:!0}]}]}}};NgxInputGradientComponent=(0,tslib_es6.Cg)([(0,core.Component)({standalone:!0,selector:"ngx-input-gradient",template:'<div class="ngx-input-color-picker" (click)="stopPropagation($event)">\r\n  <div class="ngx-color-preview" [style.background]="resultGradient"></div>\r\n  <div class="inner">\r\n    <range-slider\r\n      [(ngModel)]="rangeValues"\r\n      [min]="0"\r\n      [max]="100"\r\n      [step]="1"\r\n      [addNewRangeOnClick]="true"\r\n      [background]="baseBg"\r\n      [(selectedIndex)]="selectedIndex"\r\n      (change)="generateGradient()"\r\n      #rangeSlider></range-slider>\r\n\r\n    <div class="text-end">\r\n      <button class="remove-btn" type="button" (click)="remove()">remove</button>\r\n    </div>\r\n    <div class="ngx-row" *ngIf="rangeValues[selectedIndex]">\r\n      <div class="ngx-input-group ngx-col-6">\r\n        <div class="label">Color</div>\r\n        <div class="input-color">\r\n          <input\r\n            type="text"\r\n            [(ngModel)]="rangeValues[selectedIndex].color"\r\n            name="color"\r\n            #ngxGradColor\r\n            (ngModelChange)="generateGradient()" />\r\n          <span\r\n            class="color"\r\n            [style.backgroundColor]="rangeValues[selectedIndex].color"\r\n            [ngxInputColor]="ngxGradColor"\r\n            [showCloseButton]="false"\r\n            [showConfirmButton]="false"\r\n            [simpleMode]="true"\r\n            (change)="generateGradient($event)"></span>\r\n        </div>\r\n      </div>\r\n      <div class="ngx-col-6">\r\n        <div class="label">Position</div>\r\n        <input\r\n          type="number"\r\n          [(ngModel)]="rangeValues[selectedIndex].value"\r\n          min="0"\r\n          max="100"\r\n          name="posiition"\r\n          (change)="generateGradient(); updateRangeSlider()" />\r\n      </div>\r\n      <div class="ngx-col-6">\r\n        <div class="label">Rotation</div>\r\n        <select [(ngModel)]="rotation" (change)="generateGradient()" name="rotation">\r\n          <option [value]="item" *ngFor="let item of rotationList">{{ item + \'°\' }}</option>\r\n        </select>\r\n      </div>\r\n      <div class="ngx-col-6">\r\n        <div class="label">Type</div>\r\n        <select [(ngModel)]="type" (change)="generateGradient()" name="type">\r\n          <option value="linear">linear</option>\r\n          <option value="radial">radial</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class="default-list">\r\n      <span\r\n        *ngFor="let item of defaultGradients; let i = index"\r\n        [style.background]="item"\r\n        (click)="onSelectDefault(item, i)"></span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="actions">\r\n    <div class="action-buttons">\r\n      <button (click)="close()" *ngIf="showCloseButton">{{ closeTitle }}</button>\r\n      <button (click)="ok()">{{ confirmTitle }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n',changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)(()=>NgxInputGradientComponent),multi:!0},{provide:fesm2022_forms.cz,multi:!0,useExisting:NgxInputGradientComponent}],imports:[common.MD,fesm2022_forms.YN,ngx_input_color_module.T,RangeSliderComponent],styles:[ngx_input_gradient_componentngResource_default()]})],NgxInputGradientComponent);var slider_component=__webpack_require__("./projects/ngx-input-color/src/slider/slider.component.ts"),ColorInspector_enum=__webpack_require__("./projects/ngx-input-color/src/models/ColorInspector.enum.ts");let NgxInputGradientDirective=class NgxInputGradientDirective{constructor(_doc,el,renderer,viewContainerRef){this._doc=_doc,this.el=el,this.renderer=renderer,this.viewContainerRef=viewContainerRef,this.closeTitle="Close",this.confirmTitle="Ok",this.setInputBackground=!0,this.colorInspector=ColorInspector_enum.$.Picker,this.isDisabled=!1,this._onChange=value=>{},this._onTouched=()=>{},this._onValidateChange=()=>{}}onClick(ev){ev.stopPropagation(),ev.preventDefault(),this.toggleColorPicker()}registerOnChange(fn){this._onChange=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(disabled){this.isDisabled=disabled}registerOnValidatorChange(fn){this._onValidateChange=fn}validate(control){return null}ngOnDestroy(){this.destroyColorPicker()}writeValue(value){value&&(this.setInputBackground&&this.renderer.setStyle(this.el.nativeElement,"background",value),this._onValidateChange())}toggleColorPicker(){if(this.pickerComponentRef)return void this.destroyColorPicker();this.pickerComponentRef=this.viewContainerRef.createComponent(NgxInputGradientComponent);const instance=this.pickerComponentRef.instance;instance.showCloseButton=!0,instance.closeTitle=this.closeTitle,instance.confirmTitle=this.confirmTitle;instance.confirm.subscribe(c=>{this.confirmColor(c)}),instance.cancel.subscribe(()=>{this.destroyColorPicker()});this.backdrop=this.renderer.createElement("div"),this.backdrop&&(this.backdrop.style.cssText="\n          background: #5e5e5e1e;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          overflow: auto;\n          transition: all 300ms;\n        ",this.backdrop.onclick=()=>this.destroyColorPicker()),this.colorPickerEl=this.pickerComponentRef.hostView.rootNodes[0],this.renderer.appendChild(this.backdrop,this.colorPickerEl),this.renderer.appendChild(this._doc.body,this.backdrop),this.setPosition()}setPosition(){setTimeout(()=>{if(!this.colorPickerEl||!this.pickerComponentRef)return;const hostRect=this.el.nativeElement.getBoundingClientRect(),pickerEl=this.colorPickerEl;this.renderer.setStyle(pickerEl,"position","absolute"),this.renderer.setStyle(pickerEl,"visibility","hidden"),this.renderer.setStyle(pickerEl,"top","0px"),this.renderer.setStyle(pickerEl,"left","0px"),this.renderer.setStyle(pickerEl,"z-index","9999"),this._doc.body.appendChild(pickerEl);const pickerRect=pickerEl.getBoundingClientRect();let left=hostRect.left+hostRect.width/2-pickerRect.width/2,top=hostRect.bottom;left+pickerRect.width>window.innerWidth&&(left=window.innerWidth-pickerRect.width-8),left<8&&(left=8),top+pickerRect.height>window.innerHeight&&(top=hostRect.top-pickerRect.height),top<8&&(top=8),this.renderer.setStyle(pickerEl,"visibility","visible"),this.renderer.setStyle(pickerEl,"top",`${top}px`),this.renderer.setStyle(pickerEl,"left",`${left}px`)})}destroyColorPicker(){this.pickerComponentRef&&(this.pickerComponentRef.destroy(),this.pickerComponentRef=void 0),this.backdrop&&this.backdrop.parentNode&&(this.renderer.removeChild(this._doc.body,this.backdrop),this.backdrop=void 0),this.colorPickerEl=void 0}confirmColor(c){this.setInputBackground&&this.renderer.setStyle(this.el.nativeElement,"background",c),this._onChange(c),this.destroyColorPicker()}static{this.ctorParameters=()=>[{type:Document,decorators:[{type:core.Inject,args:[common.qQ]}]},{type:core.ElementRef},{type:core.Renderer2},{type:core.ViewContainerRef}]}static{this.propDecorators={closeTitle:[{type:core.Input}],confirmTitle:[{type:core.Input}],setInputBackground:[{type:core.Input}],colorInspector:[{type:core.Input,args:["defaultInspector"]}],onClick:[{type:core.HostListener,args:["click",["$event"]]}],setPosition:[{type:core.HostListener,args:["window:resize",["$event"]]}]}}};NgxInputGradientDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[ngxInputGradient]",providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)(()=>NgxInputGradientDirective),multi:!0},{provide:fesm2022_forms.cz,multi:!0,useExisting:NgxInputGradientDirective}]})],NgxInputGradientDirective);let NgxInputGradientModule=class NgxInputGradientModule{};NgxInputGradientModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[NgxInputGradientDirective],imports:[common.MD,fesm2022_forms.YN,slider_component.d,RangeSliderComponent,NgxInputGradientComponent],exports:[NgxInputGradientComponent,NgxInputGradientDirective],providers:[]})],NgxInputGradientModule);const ngx_input_gradient_stories={title:"Demo/NgxInputGradient",component:NgxInputGradientComponent,tags:["autodocs"],argTypes:{},args:{},decorators:[(0,dist.Iz)({imports:[common.MD,fesm2022_forms.YN,NgxInputGradientModule,NgxInputGradientComponent,ngx_input_color_module.T]})],render:args=>({props:{...args},template:'\n    <div class="flex flex-col gap-4">\n    <ngx-input-gradient></ngx-input-gradient>\n    </div>'})},Default={parameters:{controls:{}},args:{closeTitle:"انصراف",confirmTitle:"تائید"},render:args=>({props:{...args,bgColor:"linear-gradient(90deg, #2A9FD3 0%, #8B1ACF 100%)"},template:'\n    <div class="flex flex-col gap-4">\n    <pre> {{bgColor}}</pre>\n    <ngx-input-gradient [(ngModel)]="bgColor"></ngx-input-gradient>\n    </div>'})},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {}\n  },\n  args: {\n    closeTitle: 'انصراف',\n    confirmTitle: 'تائید'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      bgColor: 'linear-gradient(90deg, #2A9FD3 0%, #8B1ACF 100%)'\n    },\n    template: `\n    <div class=\"flex flex-col gap-4\">\n    <pre> {{bgColor}}</pre>\n    <ngx-input-gradient [(ngModel)]=\"bgColor\"></ngx-input-gradient>\n    </div>`\n  })\n}",...Default.parameters?.docs?.source}}}}}]);