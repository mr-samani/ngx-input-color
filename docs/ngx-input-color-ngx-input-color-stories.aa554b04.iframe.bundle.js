"use strict";(self.webpackChunkngx_input_color=self.webpackChunkngx_input_color||[]).push([[82],{"./projects/storybook/src/ngx-input-color/ngx-input-color.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,HSL:()=>HSL,HSV:()=>HSV,InputDirective:()=>InputDirective,Minimal:()=>Minimal,RGB:()=>RGB,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),_angular_forms__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_ngx_input_color_src_public_api__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./projects/ngx-input-color/src/lib/ngx-input-color/ngx-input-color.component.ts"),_ngx_input_color_src_ngx_input_color_module__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./projects/ngx-input-color/src/ngx-input-color.module.ts"),_ngx_input_color_src_pipes_enum_to_array_pipe__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./projects/ngx-input-color/src/pipes/enum-to-array.pipe.ts"),_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/ngx-input-color/src/models/ColorInspector.enum.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Demo/NgxInputColor",component:_ngx_input_color_src_public_api__WEBPACK_IMPORTED_MODULE_1__.I,tags:["autodocs"],argTypes:{defaultInspector:{options:Object.keys(_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$).filter(key=>!isNaN(parseInt(key))).map(key=>parseInt(key)),control:{type:"select",labels:Object.values(_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$).filter(value=>"string"==typeof value)}},outputType:{options:["CMYK","HSL","HSV","RGB","HEX","HEXA"],control:{type:"select"}}},args:{defaultInspector:_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$.Picker},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.Iz)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.MD,_angular_forms__WEBPACK_IMPORTED_MODULE_4__.YN,_ngx_input_color_src_pipes_enum_to_array_pipe__WEBPACK_IMPORTED_MODULE_5__.y,_ngx_input_color_src_ngx_input_color_module__WEBPACK_IMPORTED_MODULE_6__.T]})],render:args=>({props:{...args,myColor:"#5d00f1ff"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor"></ngx-input-color>\n    </div>'})},Default={parameters:{controls:{}},args:{closeTitle:"انصراف",confirmTitle:"تائید"},render:args=>({props:{...args,myColor:"#01a13fff"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor"></ngx-input-color>\n    </div>'})},RGB={parameters:{controls:{}},args:{defaultInspector:_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$.RGB,outputType:"RGB"},render:args=>({props:{...args,myColor:"#9c01a1ff"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>'})},HSL={parameters:{controls:{}},args:{defaultInspector:_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$.HSL,outputType:"HSL"},render:args=>({props:{...args,myColor:"hsl(296, 88%, 87%)"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>'})},HSV={parameters:{controls:{}},args:{defaultInspector:_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$.Picker,outputType:"HSV"},render:args=>({props:{...args,myColor:"#ff0040ff"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>'})},Minimal={name:"Minimal UI",parameters:{controls:{}},args:{defaultInspector:_ngx_input_color_src_models_ColorInspector_enum__WEBPACK_IMPORTED_MODULE_2__.$.Picker,simpleMode:!0,showCloseButton:!1,showConfirmButton:!1},render:args=>({props:{...args,myColor:"pink"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color \n        [(ngModel)]="myColor"\n        [simpleMode]="simpleMode"\n        [showCloseButton]="showCloseButton"\n        [showConfirmButton]="showConfirmButton"\n        ></ngx-input-color>\n    </div>'})},InputDirective={name:"Input",parameters:{controls:{}},args:{simpleMode:!0,showCloseButton:!1,showConfirmButton:!1},render:args=>({props:{...args,myColor:"pink"},template:'\n    <div class="flex flex-col gap-4">\n    <h1> ngxInputColor = {{myColor}}</h1>\n    <input ngxInputColor \n        [(ngModel)]="myColor" \n        [simpleMode]="simpleMode" \n        [showCloseButton]="showCloseButton" \n        [showConfirmButton]="showConfirmButton"\n        class="form-control" />\n    </div>'})},__namedExportsOrder=["Default","RGB","HSL","HSV","Minimal","InputDirective"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    controls: {}\n  },\n  args: {\n    closeTitle: 'انصراف',\n    confirmTitle: 'تائید'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: '#01a13fff'\n    },\n    template: `\n    <div class=\"flex flex-col gap-4\">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]=\"myColor\"></ngx-input-color>\n    </div>`\n  })\n}",...Default.parameters?.docs?.source}}},RGB.parameters={...RGB.parameters,docs:{...RGB.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {}\n  },\n  args: {\n    defaultInspector: ColorInspector.RGB,\n    outputType: \'RGB\'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: \'#9c01a1ff\'\n    },\n    template: `\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>`\n  })\n}',...RGB.parameters?.docs?.source}}},HSL.parameters={...HSL.parameters,docs:{...HSL.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {}\n  },\n  args: {\n    defaultInspector: ColorInspector.HSL,\n    outputType: \'HSL\'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: \'hsl(296, 88%, 87%)\'\n    },\n    template: `\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>`\n  })\n}',...HSL.parameters?.docs?.source}}},HSV.parameters={...HSV.parameters,docs:{...HSV.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    controls: {}\n  },\n  args: {\n    defaultInspector: ColorInspector.Picker,\n    outputType: \'HSV\'\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: \'#ff0040ff\'\n    },\n    template: `\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color [(ngModel)]="myColor" [outputType]="outputType"></ngx-input-color>\n    </div>`\n  })\n}',...HSV.parameters?.docs?.source}}},Minimal.parameters={...Minimal.parameters,docs:{...Minimal.parameters?.docs,source:{originalSource:'{\n  name: \'Minimal UI\',\n  parameters: {\n    controls: {}\n  },\n  args: {\n    defaultInspector: ColorInspector.Picker,\n    simpleMode: true,\n    showCloseButton: false,\n    showConfirmButton: false\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: \'pink\'\n    },\n    template: `\n    <div class="flex flex-col gap-4">\n    <h1> {{myColor}}</h1>\n    <ngx-input-color \n        [(ngModel)]="myColor"\n        [simpleMode]="simpleMode"\n        [showCloseButton]="showCloseButton"\n        [showConfirmButton]="showConfirmButton"\n        ></ngx-input-color>\n    </div>`\n  })\n}',...Minimal.parameters?.docs?.source}}},InputDirective.parameters={...InputDirective.parameters,docs:{...InputDirective.parameters?.docs,source:{originalSource:'{\n  name: \'Input\',\n  parameters: {\n    controls: {}\n  },\n  args: {\n    simpleMode: true,\n    showCloseButton: false,\n    showConfirmButton: false\n  },\n  render: args => ({\n    props: {\n      ...args,\n      myColor: \'pink\'\n    },\n    template: `\n    <div class="flex flex-col gap-4">\n    <h1> ngxInputColor = {{myColor}}</h1>\n    <input ngxInputColor \n        [(ngModel)]="myColor" \n        [simpleMode]="simpleMode" \n        [showCloseButton]="showCloseButton" \n        [showConfirmButton]="showConfirmButton"\n        class="form-control" />\n    </div>`\n  })\n}',...InputDirective.parameters?.docs?.source}}}}}]);